redis.cluster.nodes=192.168.224.108:6379,192.168.224.108:6380,192.168.224.109:6379,192.168.224.109:6380,192.168.224.110:6379,192.168.224.110:6380

#可选配置
#最大空闲连接数
redis.maxIdle=
#池中最少要保留的对象数，默认0
redis.minIdle=
#对象池中最多允许的对象数，默认8（可能超过，不过超过后使用完了就会销毁，后面源码会介绍相关机制）
redis.maxTotal=
#maxWaitMillis：从池中获取一个对象最长的等待时间，默认-1，含义是无限等，超过这个时间还未获取空闲对象，就会抛出异常。
redis.maxWaitMillis=
#当池中的资源耗尽时是否进行阻塞,设置false直接报错,true表示会一直等待，直到有可用资源
redis.blockWhenExhausted=
#是否使用公平锁，默认false
redis.fairness=
#是否允许jmx的方式创建一个配置实例，默认true
redis.jmxEnabled=
#jmx默认的前缀名，默认为pool
redis.jmxNamePrefix=
#jmx默认的base name，默认为null，意味着池提供一个名称
redis.jmxNameBase=
#是否使用FIFO先进先出的模式获取对象（空闲对象都在一个队列中），默认为true使用先进先出，false是先进后出
redis.lifo=
#设置的逐出策略类名, 默认DefaultEvictionPolicy(当连接超过最大空闲时间,或连接数超过最大空闲连接数)
redis.evictionPolicyClassName=
#驱逐线程关闭的超时时间，默认10秒。
redis.evictorShutdownTimeoutMillis=
#驱逐线程的执行周期，上面说过该线程是个定时任务。默认-1，即不开启驱逐线程，所以与之相关的参数是没有作用的。
redis.timeBetweenEvictionRunsMillis=
#也是最小的驱逐时间，但是会和另一个指标minIdle一同使用，满足空闲时间超过这个设置，且当前空闲数量比设置的minIdle要大，会销毁该对象。所以，通常该值设置的比minEvictableIdleTimeMillis要小。
redis.softMinEvictableIdleTimeMillis=
#最小的驱逐时间，单位毫秒，默认30分钟。这个用于驱逐线程，对象空闲时间超过这个时间，意味着此时系统不忙碌，会减少对象数量。
redis.minEvictableIdleTimeMillis=
#在创建对象的时候是否检测对象，默认false。后续会结合代码说明是如何检测的。
redis.testOnCreate=
#在获取空闲对象的时候是否检测对象是否有效，默认false。这个通常会设置成true，一般希望获取一个可用有效的对象
redis.testOnBorrow=
#在使用完对象放回池中时是否检测对象是否仍有效，默认false
redis.testOnReturn=
#在空闲的时候是否检测对象是否有效，这个发生在驱逐线程执行时。　　　
redis.testWhileIdle=
#驱逐线程运行每次测试的对象数量，默认3个。驱逐线程就是用来检查对象空闲状态，通过设置的对象数量等参数，保持对象的活跃度和数量，其是一个定时任务，每次不是检查所有的对象，而是抽查几个，这个就是用于抽查。
redis.numTestsPerEvictionRun=